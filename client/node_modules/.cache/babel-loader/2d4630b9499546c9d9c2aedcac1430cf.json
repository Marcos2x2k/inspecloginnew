{"ast":null,"code":"const {\n  isSafeFromPollution\n} = require(\"./utilities\");\n\nmodule.exports = function (data) {\n  if (!data || data.length < 1) return Object.create(null);\n  let d = Object.create(null),\n      keys = Object.keys(data);\n\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i],\n        value = data[key],\n        current = d,\n        keyParts = key.replace(new RegExp(/\\[/g), '.').replace(new RegExp(/\\]/g), '').split('.');\n\n    for (let index = 0; index < keyParts.length; index++) {\n      let k = keyParts[index]; // Ensure we don't allow prototype pollution\n\n      if (!isSafeFromPollution(current, k)) {\n        continue;\n      }\n\n      if (index >= keyParts.length - 1) {\n        current[k] = value;\n      } else {\n        if (!current[k]) current[k] = !isNaN(keyParts[index + 1]) ? [] : Object.create(null);\n        current = current[k];\n      }\n    }\n  }\n\n  return d;\n};","map":{"version":3,"sources":["D:/Marcos Muni/Proyecto Muni/Gitinspecobras/inspecobras/client/node_modules/express-fileupload/lib/processNested.js"],"names":["isSafeFromPollution","require","module","exports","data","length","Object","create","d","keys","i","key","value","current","keyParts","replace","RegExp","split","index","k","isNaN"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAA0BC,OAAO,CAAC,aAAD,CAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAc;AAC7B,MAAI,CAACA,IAAD,IAASA,IAAI,CAACC,MAAL,GAAc,CAA3B,EAA8B,OAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AAE9B,MAAIC,CAAC,GAAGF,MAAM,CAACC,MAAP,CAAc,IAAd,CAAR;AAAA,MACEE,IAAI,GAAGH,MAAM,CAACG,IAAP,CAAYL,IAAZ,CADT;;AAGA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACJ,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AACpC,QAAIC,GAAG,GAAGF,IAAI,CAACC,CAAD,CAAd;AAAA,QACEE,KAAK,GAAGR,IAAI,CAACO,GAAD,CADd;AAAA,QAEEE,OAAO,GAAGL,CAFZ;AAAA,QAGEM,QAAQ,GAAGH,GAAG,CACXI,OADQ,CACA,IAAIC,MAAJ,CAAW,KAAX,CADA,EACmB,GADnB,EAERD,OAFQ,CAEA,IAAIC,MAAJ,CAAW,KAAX,CAFA,EAEmB,EAFnB,EAGRC,KAHQ,CAGF,GAHE,CAHb;;AAQA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,QAAQ,CAACT,MAArC,EAA6Ca,KAAK,EAAlD,EAAqD;AACnD,UAAIC,CAAC,GAAGL,QAAQ,CAACI,KAAD,CAAhB,CADmD,CAGnD;;AACA,UAAI,CAAClB,mBAAmB,CAACa,OAAD,EAAUM,CAAV,CAAxB,EAAsC;AACpC;AACD;;AAED,UAAID,KAAK,IAAIJ,QAAQ,CAACT,MAAT,GAAkB,CAA/B,EAAiC;AAC/BQ,QAAAA,OAAO,CAACM,CAAD,CAAP,GAAaP,KAAb;AACD,OAFD,MAEO;AACL,YAAI,CAACC,OAAO,CAACM,CAAD,CAAZ,EAAiBN,OAAO,CAACM,CAAD,CAAP,GAAa,CAACC,KAAK,CAACN,QAAQ,CAACI,KAAK,GAAG,CAAT,CAAT,CAAN,GAA8B,EAA9B,GAAmCZ,MAAM,CAACC,MAAP,CAAc,IAAd,CAAhD;AACjBM,QAAAA,OAAO,GAAGA,OAAO,CAACM,CAAD,CAAjB;AACD;AACF;AACF;;AACD,SAAOX,CAAP;AACD,CAhCD","sourcesContent":["const { isSafeFromPollution } = require(\"./utilities\");\n\nmodule.exports = function(data){\n  if (!data || data.length < 1) return Object.create(null);\n\n  let d = Object.create(null),\n    keys = Object.keys(data);\n\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i],\n      value = data[key],\n      current = d,\n      keyParts = key\n        .replace(new RegExp(/\\[/g), '.')\n        .replace(new RegExp(/\\]/g), '')\n        .split('.');\n\n    for (let index = 0; index < keyParts.length; index++){\n      let k = keyParts[index];\n\n      // Ensure we don't allow prototype pollution\n      if (!isSafeFromPollution(current, k)) {\n        continue;\n      }\n\n      if (index >= keyParts.length - 1){\n        current[k] = value;\n      } else {\n        if (!current[k]) current[k] = !isNaN(keyParts[index + 1]) ? [] : Object.create(null);\n        current = current[k];\n      }\n    }\n  }\n  return d;\n};\n"]},"metadata":{},"sourceType":"script"}