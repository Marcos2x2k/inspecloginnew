{"ast":null,"code":"// ** ACÁ EN REDUCER CREO MI ESTADO INICIAL - \n// ** Y HAGO LA LOGICA DE MIS FILTRADOS\nconst initialState = {\n  numxpediente: [],\n  expediente: [] // anio:[],\n  // fecha:[],\n  // ticket: [],\n  // ticketDelete: [],\n\n}; //action.payload llega las opciones del select\n\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_EXPEDIENTES':\n      return { ...state,\n        // guardamos el estado anterior como buena practica\n        expediente: action.payload,\n        //Asi creamos en JSON - var json = await axios.get(\"http://localhost:3001/dogs\",{});\n        // el payload lo creamos en actions como payload: json.data\n        allExpediente: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Marcos Muni/Proyecto Muni/Gitinspecobras/inspecobras/client/src/reducer/index.js"],"names":["initialState","numxpediente","expediente","rootReducer","state","action","type","payload","allExpediente"],"mappings":"AAAA;AACA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,UAAU,EAAC,EAFM,CAGjB;AACA;AACA;AACA;;AANiB,CAArB,C,CAUA;;AACA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAArBJ,YAAqB;AAAA,MAAPK,MAAO;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,iBAAL;AACI,aAAM,EACF,GAAGF,KADD;AACQ;AACVF,QAAAA,UAAU,EAAEG,MAAM,CAACE,OAFjB;AAGF;AACA;AACAC,QAAAA,aAAa,EAAEH,MAAM,CAACE;AALpB,OAAN;;AAOA;AACI,aAAOH,KAAP;AAXZ;AAaC","sourcesContent":["// ** ACÁ EN REDUCER CREO MI ESTADO INICIAL - \r\n// ** Y HAGO LA LOGICA DE MIS FILTRADOS\r\nconst initialState = {\r\n    numxpediente: [],    \r\n    expediente:[],\r\n    // anio:[],\r\n    // fecha:[],\r\n    // ticket: [],\r\n    // ticketDelete: [],\r\n}\r\n\r\n\r\n//action.payload llega las opciones del select\r\nexport default function rootReducer(state =  initialState, action){ \r\n    switch(action.type){\r\n        \r\n        case 'GET_EXPEDIENTES':\r\n            return{\r\n                ...state, // guardamos el estado anterior como buena practica\r\n                expediente: action.payload,  \r\n                //Asi creamos en JSON - var json = await axios.get(\"http://localhost:3001/dogs\",{});\r\n                // el payload lo creamos en actions como payload: json.data\r\n                allExpediente: action.payload\r\n            }     \r\n            default:\r\n                return state;\r\n        }\r\n    } \r\n\r\n"]},"metadata":{},"sourceType":"module"}