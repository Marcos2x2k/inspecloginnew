{"ast":null,"code":"// ** ACÁ EN REDUCER CREO MI ESTADO INICIAL - \n// ** Y HAGO LA LOGICA DE MIS FILTRADOS\nconst initialState = {\n  numxpedientes: [],\n  expedientes: [] // expedientesDetails:[]\n  // anio:[],\n  // fecha:[],\n  // ticket: [],\n  // ticketDelete: [],\n\n}; //action.payload llega las opciones del select\n\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_EXPEDIENTES':\n      return { ...state,\n        // guardamos el estado anterior como buena practica\n        expedientes: action.payload,\n        //Asi creamos en JSON - var json = await axios.get(\"http://localhost:3001/dogs\",{});\n        // el payload lo creamos en actions como payload: json.data\n        allExpedientes: action.payload\n      };\n\n    case 'GET_NAME_EXPEDIENTES':\n      return { ...state,\n        expedientes: action.payload\n      };\n\n    case 'POST_EXPEDIENTES':\n      //No se declara en actions, se declara en el reducer. \n      //en action solo se trae la ruta\n      return { ...state\n      };\n\n    case 'GET_DETAILS_EXPEDIENTES':\n      return {\n        // ...state,     \n        // expedientes: action.payload,               \n        expedientesDetails: action.payload\n      };\n\n    case 'ORDER_BY_NAME':\n      let sortedArr = action.payload === 'asc' ? state.expedientes.sort(function (a, b) {\n        if (a.expedientes > b.expedientes) {\n          return 1;\n        }\n\n        if (a.expedientes < b.expedientes) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.expedientes.sort(function (a, b) {\n        if (a.expedientes > b.expedientes) {\n          return -1;\n        }\n\n        if (a.expedientes < b.expedientes) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        expedientes: sortedArr // paso al estado el ordenamiento\n\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Marcos Muni/Proyecto Muni/Gitinspecobras/inspecobras/client/src/reducer/index.js"],"names":["initialState","numxpedientes","expedientes","rootReducer","state","action","type","payload","allExpedientes","expedientesDetails","sortedArr","sort","a","b"],"mappings":"AAAA;AACA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,WAAW,EAAC,EAFK,CAGjB;AACA;AACA;AACA;AACA;;AAPiB,CAArB,C,CAWA;;AACA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAArBJ,YAAqB;AAAA,MAAPK,MAAO;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,iBAAL;AACI,aAAM,EACF,GAAGF,KADD;AACQ;AACVF,QAAAA,WAAW,EAAEG,MAAM,CAACE,OAFlB;AAGF;AACA;AACAC,QAAAA,cAAc,EAAEH,MAAM,CAACE;AALrB,OAAN;;AAOJ,SAAK,sBAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFlB,OAAN;;AAIJ,SAAK,kBAAL;AAAwB;AACN;AACT,aAAM,EACH,GAAGH;AADA,OAAN;;AAIT,SAAK,yBAAL;AACQ,aAAO;AACH;AACA;AACAK,QAAAA,kBAAkB,EAAEJ,MAAM,CAACE;AAHxB,OAAP;;AAKR,SAAK,eAAL;AACQ,UAAIG,SAAS,GAAGL,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAChBH,KAAK,CAACF,WAAN,CAAkBS,IAAlB,CAAuB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAChC,YAAID,CAAC,CAACV,WAAF,GAAgBW,CAAC,CAACX,WAAtB,EAAmC;AAC/B,iBAAO,CAAP;AACH;;AACD,YAAIU,CAAC,CAACV,WAAF,GAAgBW,CAAC,CAACX,WAAtB,EAAmC;AAC/B,iBAAO,CAAC,CAAR;AACH;;AACD,eAAO,CAAP;AACH,OARD,CADgB,GAUhBE,KAAK,CAACF,WAAN,CAAkBS,IAAlB,CAAuB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAChC,YAAID,CAAC,CAACV,WAAF,GAAgBW,CAAC,CAACX,WAAtB,EAAmC;AAC/B,iBAAO,CAAC,CAAR;AACH;;AACD,YAAIU,CAAC,CAACV,WAAF,GAAgBW,CAAC,CAACX,WAAtB,EAAmC;AAC/B,iBAAO,CAAP;AACH;;AACD,eAAO,CAAP;AACH,OARD,CAVA;AAoBA,aAAM,EACH,GAAGE,KADA;AAEHF,QAAAA,WAAW,EAAEQ,SAFV,CAEoB;;AAFpB,OAAN;;AAIJ;AACI,aAAON,KAAP;AArDZ;AAuDC","sourcesContent":["// ** ACÁ EN REDUCER CREO MI ESTADO INICIAL - \r\n// ** Y HAGO LA LOGICA DE MIS FILTRADOS\r\nconst initialState = {\r\n    numxpedientes: [],    \r\n    expedientes:[],\r\n    // expedientesDetails:[]\r\n    // anio:[],\r\n    // fecha:[],\r\n    // ticket: [],\r\n    // ticketDelete: [],\r\n}\r\n\r\n\r\n//action.payload llega las opciones del select\r\nexport default function rootReducer(state =  initialState, action){ \r\n    switch(action.type){\r\n        \r\n        case 'GET_EXPEDIENTES':\r\n            return{\r\n                ...state, // guardamos el estado anterior como buena practica\r\n                expedientes: action.payload,  \r\n                //Asi creamos en JSON - var json = await axios.get(\"http://localhost:3001/dogs\",{});\r\n                // el payload lo creamos en actions como payload: json.data\r\n                allExpedientes: action.payload\r\n            }     \r\n        case 'GET_NAME_EXPEDIENTES':\r\n            return{\r\n                ...state,\r\n                expedientes: action.payload\r\n            }  \r\n        case 'POST_EXPEDIENTES'://No se declara en actions, se declara en el reducer. \r\n                          //en action solo se trae la ruta\r\n                 return{\r\n                    ...state\r\n                 }\r\n                \r\n        case 'GET_DETAILS_EXPEDIENTES':            \r\n                return {\r\n                    // ...state,     \r\n                    // expedientes: action.payload,               \r\n                    expedientesDetails: action.payload                    \r\n                }        \r\n        case 'ORDER_BY_NAME':\r\n                let sortedArr = action.payload === 'asc' ?\r\n                state.expedientes.sort(function(a,b){\r\n                    if (a.expedientes > b.expedientes) {\r\n                        return 1;\r\n                    }\r\n                    if (a.expedientes < b.expedientes) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                state.expedientes.sort(function(a,b){\r\n                    if (a.expedientes > b.expedientes) {\r\n                        return -1;\r\n                    }\r\n                    if (a.expedientes < b.expedientes) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })        \r\n                \r\n                return{\r\n                   ...state,\r\n                   expedientes: sortedArr // paso al estado el ordenamiento\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    } \r\n\r\n"]},"metadata":{},"sourceType":"module"}